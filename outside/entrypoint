#!/usr/bin/env python3
"""
Perform QA according to user request.
"""
import argparse
import os
import sys

import subprocess

LINTERS = {"flake8", "pylint"}
INSIDE = {"coverage"} | LINTERS

# Read arguments
try:
    script = sys.argv[1]
except IndexError:
    sys.exit("You must supply a script to be executed")

if script in INSIDE:
    if sys.argv[2:]:
        raise Exception("Script {} does not accept arguments".format(
            script))
    container_name = subprocess.check_output(["container-name"])
    cmd = [
        "docker-compose", "run", "--rm",
        "-e", "LOG_LEVEL=WARNING",
        "-e", "ADDON_CATEGORIES",
        # HACK https://github.com/docker/compose/issues/4688
        "--name", container_name.decode().strip(),
        # Avoid possible routing problems in Traefik
        "--label", "traefik.enable=false",
    ]
    # Linters don't need other containers
    if script in LINTERS:
        cmd += ["--no-deps", "-e", "WAIT_DB=false"]
    # Get source code to be executed
    with open("/usr/local/src/{}".format(script), "rb") as source:
        shebang = source.readline()
        if not shebang.startswith(b"#!"):
            raise Exception("Scripts need a shebang")
        # TODO Find a better way to execute code interpreting its shebang
        shebang = shebang.replace(b"#!", b"", 1).split()
        code = source.read()
    cmd += ["odoo"] + shebang + ["-c", code]
else:
    # Outside scripts need nothing special
    cmd = sys.argv[1:]

# Exec the desired command replacing entrypoint's PID
os.execvp(cmd[0], cmd)
